{"ast":null,"code":"import React,{useState}from\"react\";import io from\"socket.io-client\";import Room from\"./components/Room\";import Chat from\"./components/Chat\";import{jsx as _jsx}from\"react/jsx-runtime\";const socket=io(\"http://localhost:4000\");// Connect to backend server\nfunction App(){const[room,setRoom]=useState(\"\");const joinRoom=roomId=>{setRoom(roomId);socket.emit(\"joinRoom\",roomId);};return/*#__PURE__*/_jsx(\"div\",{children:!room?/*#__PURE__*/_jsx(Room,{joinRoom:joinRoom}):/*#__PURE__*/_jsx(Chat,{socket:socket,room:room})});}export default App;","map":{"version":3,"names":["React","useState","io","Room","Chat","jsx","_jsx","socket","App","room","setRoom","joinRoom","roomId","emit","children"],"sources":["C:/Users/91913/Downloads/secret-chat/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Room from \"./components/Room\";\nimport Chat from \"./components/Chat\";\n\nconst socket = io(\"http://localhost:4000\");  // Connect to backend server\n\nfunction App() {\n    const [room, setRoom] = useState(\"\");\n\n    const joinRoom = (roomId) => {\n        setRoom(roomId);\n        socket.emit(\"joinRoom\", roomId);\n    };\n\n    return (\n        <div>\n            {!room ? (\n                <Room joinRoom={joinRoom} />\n            ) : (\n                <Chat socket={socket} room={room} />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErC,KAAM,CAAAC,MAAM,CAAGL,EAAE,CAAC,uBAAuB,CAAC,CAAG;AAE7C,QAAS,CAAAM,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAU,QAAQ,CAAIC,MAAM,EAAK,CACzBF,OAAO,CAACE,MAAM,CAAC,CACfL,MAAM,CAACM,IAAI,CAAC,UAAU,CAAED,MAAM,CAAC,CACnC,CAAC,CAED,mBACIN,IAAA,QAAAQ,QAAA,CACK,CAACL,IAAI,cACFH,IAAA,CAACH,IAAI,EAACQ,QAAQ,CAAEA,QAAS,CAAE,CAAC,cAE5BL,IAAA,CAACF,IAAI,EAACG,MAAM,CAAEA,MAAO,CAACE,IAAI,CAAEA,IAAK,CAAE,CACtC,CACA,CAAC,CAEd,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}